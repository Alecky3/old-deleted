What happens when  you type https://www.google.com in your browser and press enter:

Whenever you need something on the internet you jump right to your favorite browser and write what you want in your search bar,  then I  in a matter of milliseconds you have a response in your browser for your search query, may it be your favorite social media, news site, streaming site, an e-commerce site and many more. The elephant in the room is what really happens behind the scenes?.  Buckle up and lets travel this journey of what really happens behind the scenes.

First there are terminologies we have to understand namely, TCP/IP, DNS, HTTP & HTTPS, Web servers, Application servers, Firewalls and Databases just to name a few.

TCP/IP: Is the communication protocol that enables an entity (your browser or another application in your computer or phone) in one host (your computer or phone) to interact with a corresponding entity on the same layer in another host. A protocol is a set of rules that dictates how two parties or entities communicate with one another. Your browser uses this protocol suite to communicate with the servers holding the various resources.

DNS(Domain Name System): These are servers that translates domain names to IP addresses. Every server on the internet has an IP that uniquely identifies it and that other  entities can use to communicate with. An IP has this format 192.24.25.5, four octets with each octet having a range of 0-255. Memorizing these numbers can be difficult for humans and that’s where DNS comes in. It maps a domain name to an IP address. Example a domain like google.com may be mapped to 178.8.8.8. So when you type google.com in your browser your DNS server returns the address of google.com to your browser which it then uses this address to communicate directly with the server holding the resources. And this brings us to another topic HTTP and HTTPS, but before we understand these two concepts and how they relate, lets look first at the  the different parts of URL (Uniform resource Locator):

https://www.google.com

https – is a layer 4 protocol (Application Layer) of the TCP/IP protocol suite. This is the protocol that your browser uses to send HTTP request to HTTP servers (Servers that know how communicate using HTTP) holding the resources. HTTP stands for (Hypertext Transfer protocol) which uses plain text to communicate hence not secure. HTTPS stands for (Hypertext Transfer protocol Secure) which is a secure version of HTTP that uses SSL/TLS to secure your communication. This is the preferred way of communicating with servers and other entities on the internet especially when sending sensitive information like credit card numbers.

Www.google.com – is a domain name and to be specific is a domain record that maps to an IP address of the actual server.

After the domain name is the path. A path works like a folder to where the resource is actually stored. Example htpps://www.google.com/alex/. Here the path is /alex. After the path is the resource   and in our case is the index.html.

HTTPS: as described above, HTTPS is a secure version of HTTP and when your URL starts with this scheme the browser understands it has to encrypt communication between the communicating parties. It first established an TCP handshake with the server in our case a Web server holding the content we want. (TCP is a layer 3 protocol of the TCP/IP protocol suite that enables reliable communication between two parties). After the TCP handshake is complete and the browser and server have agreed on preffered way of securing the communication, then the browser starts the process of sending the HTPP request.
Firewalls: Defines the boundary between a private network and a public network. Firewall help filter out packets and IPs that are allowed to communicate with your servers.

Load Balancers: A load balancer distributes client requests among all you servers so that some servers are not overwhelmed by client requests. This ensure better service delivery for your clients.

Application servers: These are servers that deal with business logic and connect with various databases to deliver services to clients.

Databases: Are application that organizes you data in a format that is easy to retrieve, update or modify and add new records. They store business logic and data and other related information.

Now lets connect the dots of the various components that works together to enable two computers to communicate and exchange information.

So when you type https://www.google.com in your browser, your browser and  operating system work together to communicate to the servers. First the browser request DNS servers for the address of the domain www.google.com. The process of resolving a domain goes as follows:
1. The browser sends the request to your ISP Resolving Name server, the Resolving name server first checks its cache for the domain name and if present returns the IP to your browser.
2. If the Resolving Nameserver can’t find the record on it’s cache, it forward the request to a Root Name server. Root name servers are at the top of the DNS hierarchy. Think of it a reference, it doesn’t keep information you’re looking for , which is the IP address to match the domain name, but it gives gives direction to where it can be found. It returns directions to a Resolving Name server on where to look for.
3. The Resolving Name server then sends a request a Top Level Domain Name Server. TLD Name servers are responsible for storing and managing information about domain names that use a specific top-level domain. The TLD Name servers then returns a response to Resolving name on the Authoritative name server to look for.
4. The Resolving Name server then sends request to the Authoritative Name server which is the final authority in the DNS resolution process. It stores all information related to domain names you want to visit including the IP address. 
5. The Authoritative Name Server returns this record to the Resolving name server which it caches then sends to the browser through the operating system.

With the IP of the server, the browser then initiates a T CP handshake with the server to establish a  secure information. After the handshake is complete the browser uses the HTTP protocol to send request to the HTTP servers which then responds back with the requested resource.

The server can  include several application servers that work together to provide the resources requested. Web servers usually store static website pages and other static content like images and videos. An application server processes business logic and usually connects and works with a Database server which stores the business logic and other related information.

The response returned by the server usually includes several sections as defined in the HTTP protocol that the browser uses to render the content for the users correctly.
